# -*- coding: utf-8 -*-
"""InitialDataGraphs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1plQ4DmfgtcRKIoLakYqxxV1BmjgVNih2

Import libraries to work with
"""

# Basic imports
import matplotlib.pyplot as plt
import pandas as pd

"""Import the data"""

# Initialize dataset from file
dataset = pd.read_csv('combinedData.csv')

# Verify the import worked
print(dataset.head())

# Remove the first column
dataset_modded = dataset[dataset.columns[1:]]

# Verify the update
print(dataset_modded.shape)

"""Break the data up into usable sets"""

# Setup the x axis to be the months of the years
x_axis = dataset_modded.columns.values

# Sample the x set to verify
print(x_axis[0:4])

# Setup the House cost variable
house_cost = dataset_modded.iloc[0]

# Setup the Interest Rate variable
interst_rate = dataset_modded.iloc[1]

# Setup Canada Price Index for shelter variable
cpi = dataset_modded.iloc[2]

# Check the new variables
print(
    f"House Cost: \n{h_cost[0:4]}\n"
    f"Interest Rate: \n{i_rate[0:4]}\n"
    f"CPI: \n{cpi[0:4]}\n"
    )

"""Append variables to dictionary for iterability"""

# Initialize new empty dictionary
data_dict = {}

# Setup a list of the titles of the data sets
titles = ['House Cost', 'Interest Rate', 'CPI']

# Couple the titles with the sets as key-value pairs
data_dict[titles[0]] = house_cost
data_dict[titles[1]] = interst_rate
data_dict[titles[2]] = cpi

"""Start plotting some Graphs to identify trends"""

# Start a for loop to make graphs for all the sets in the dictonary
for title, data in data_dict.items():
  # Make a new Figure
  fig = plt.figure()

  # Add a plot to the figure
  plot = fig.add_subplot(1, 1, 1)

  # Add Dynamic Labels and Legend
  plot.set_title(f'{title}')

  # X Labels and ticks
  plot.set_xticklabels(data, rotation=45)
  plot.set_xlabel('Months/Years')

  # y Labels
  plot.set_ylabel(f'{title}')

  # Adjust layout for better appearance
  fig.tight_layout()

  # Save the plot to a dynamic SVG file
  plt.savefig(f'{title}.svg', format='svg', bbox_inches='tight')

  # Display plot to user
  plt.show()